package org.joda.time;

import java.io.*;
import java.util.*;
import java.text.*;

import org.joda.time.base.*;
import org.joda.time.convert.*;
import org.joda.time.field.*;
import org.joda.time.format.*;
import org.joda.time.chrono.*;
import org.joda.time.*;

import org.junit.Test;
import junit.framework.*;


//Testing for 236 mutantS: JSI1-4, IOD 1-5, EAM 1-33, PCI 1-141, OMR 1-5, OAN47, PMD 1


public class LocalDateTimeTest extends TestCase
{

/*public static void main(String[] args)
{
    System.out.println("test26: " + test26());
}*/
//  private java.util.Date d1 = new Date(2000, 02, 20, 06, 10, 8);
//  private DateTime dt = new DateTime(BuddhistChronology.getInstanceUTC().getDateTimeMillis(2000, 10, 01, 8, 10, 10, 10), BuddhistChronology.getInstanceUTC());
//  private LocalDateTime lt = new LocalDateTime(ISOChronology.getInstanceUTC().getDateTimeMillis(2000, 10, 01, 01));
//  private LocalDateTime lt2 = new LocalDateTime(dt, DateTimeZone.getDefault());
//  private LocalDateTime lt3 = new LocalDateTime(dt, ISOChronology.getInstanceUTC());
//	private LocalDateTime lt = new LocalDateTime(ISOChronology.getInstanceUTC().getDateTimeMillis(2000, 10, 01, 8, 10, 10, 90));
//	private LocalDateTime lt5 = new LocalDateTime(BuddhistChronology.getInstanceUTC().getDateTimeMillis(2000, 10, 01, 8, 10, 10, 90));
//	private LocalDateTime lt1 = new LocalDateTime(ISOChronology.getInstanceUTC().getDateTimeMillis(2000, 10, 01, 8, 10, 10, 90));
//	private DateTime dt = new DateTime(BuddhistChronology.getInstanceUTC().getDateTimeMillis(2000, 10, 01, 8, 10, 10, 90), BuddhistChronology.getInstanceUTC());
//	private LocalDateTime lt2 = new LocalDateTime(dt, DateTimeZone.getDefault());
//	private LocalDateTime lt3 = new LocalDateTime(dt, ISOChronology.getInstanceUTC());
//	private LocalDateTime lt4 = new LocalDateTime(BuddhistChronology.getInstanceUTC().getDateTimeMillis(2000, 10, 01, 8, 10, 10, 90), BuddhistChronology.getInstanceUTC());
//	private	DateTime dt1 = new DateTime(GregorianChronology.getInstanceUTC().getDateTimeMillis(2000, 10, 01, 8, 10, 10, 90));
//	private LocalDateTime lt6 = new LocalDateTime(dt1, GregorianChronology.getInstanceUTC());


//------------------------ OAN 1-840 ----------------ok---------------------------------------------------------
//Left 0

/*  public LocalDateTime test1(){ // kill all(1-840)     
   LocalDateTime lt1 = new LocalDateTime(0,13,32,26,65,70,100,ISOChronology.getInstanceUTC());    
	return  lt1.withLocalMillis(ISOChronology.getInstanceUTC().getDateTimeMillis(2000, 10, 01, 01)); 
 }


//------------------------ IOD 1-5--------------------------OK--------------------------------------------------------
//left IOD_3,4

public LocalDateTime test2(){   //  IOD_1 IOD_2 IOD_5    
   LocalDateTime lt1 = new LocalDateTime(ISOChronology.getInstanceUTC().getDateTimeMillis(2000, 10, 01, 01),ISOChronology.getInstanceUTC());    
	return  lt1.withLocalMillis(ISOChronology.getInstanceUTC().getDateTimeMillis(2000, 10, 01, 01)); 
 }

//------------------------ EAM 1-157 -----------------------now-----------------------------------------------------------
// left  

//  test 1  kill  ==> EAM_1 EAM_10 EAM_11 EAM_12 EAM_14 EAM_15 EAM_16 EAM_17 EAM_18 EAM_19 EAM_2 EAM_20 EAM_21 EAM_22 EAM_23 EAM_24 EAM_25 EAM_26 EAM_27 EAM_28 EAM_29 EAM_3 EAM_30 EAM_31 EAM_32 EAM_33 EAM_34 EAM_35 EAM_36 EAM_37 EAM_38 EAM_39 EAM_4 EAM_40 EAM_41 EAM_42 EAM_5 EAM_6 EAM_7 EAM_8 EAM_9 IOD_1 IOD_2 IOD_5 OAN_1 OAN_10 OAN_100 OAN_101 OAN_102 OAN_103 OAN_104 OAN_105 OAN_106 OAN_107 OAN_108 OAN_109 OAN_11 OAN_110 OAN_111 OAN_112 OAN_113 OAN_114 OAN_115 OAN_116 OAN_117 OAN_118 OAN_119 OAN_12 OAN_120 OAN_121 OAN_122 OAN_123 OAN_124 OAN_125 OAN_126 OAN_127 OAN_128 OAN_129 OAN_13 OAN_130 OAN_131 OAN_132 OAN_133 OAN_134 OAN_135 OAN_136 OAN_137 OAN_138 OAN_139 OAN_14 OAN_140 OAN_141 OAN_142 OAN_143 OAN_144 OAN_145 OAN_146 OAN_147 OAN_148 OAN_149 OAN_15 OAN_150 OAN_151 OAN_152 OAN_153 OAN_154 OAN_155 OAN_156 OAN_157 OAN_158 OAN_159 OAN_16 OAN_160 OAN_161 OAN_162 OAN_163 OAN_164 OAN_165 OAN_166 OAN_167 OAN_168 OAN_169 OAN_17 OAN_170 OAN_171 OAN_172 OAN_173 OAN_174 OAN_175 OAN_176 OAN_177 OAN_178 OAN_179 OAN_18 OAN_180 OAN_181 OAN_182 OAN_183 OAN_184 OAN_185 OAN_186 OAN_187 OAN_188 OAN_189 OAN_19 OAN_190 OAN_191 OAN_192 OAN_193 OAN_194 OAN_195 OAN_196 OAN_197 OAN_198 OAN_199 OAN_2 OAN_20 OAN_200 OAN_201 OAN_202 OAN_203 OAN_204 OAN_205 OAN_206 OAN_207 OAN_208 OAN_209 OAN_21 OAN_210 OAN_211 OAN_212 OAN_213 OAN_214 OAN_215 OAN_216 OAN_217 OAN_218 OAN_219 OAN_22 OAN_220 OAN_221 OAN_222 OAN_223 OAN_224 OAN_225 OAN_226 OAN_227 OAN_228 OAN_229 OAN_23 OAN_230 OAN_231 OAN_232 OAN_233 OAN_234 OAN_235 OAN_236 OAN_237 OAN_238 OAN_239 OAN_24 OAN_240 OAN_241 OAN_242 OAN_243 OAN_244 OAN_245 OAN_246 OAN_247 OAN_248 OAN_249 OAN_25 OAN_250 OAN_251 OAN_252 OAN_253 OAN_254 OAN_255 OAN_256 OAN_257 OAN_258 OAN_259 OAN_26 OAN_260 OAN_261 OAN_262 OAN_263 OAN_264 OAN_265 OAN_266 OAN_267 OAN_268 OAN_269 OAN_27 OAN_270 OAN_271 OAN_272 OAN_273 OAN_274 OAN_275 OAN_276 OAN_277 OAN_278 OAN_279 OAN_28 OAN_280 OAN_281 OAN_282 OAN_283 OAN_284 OAN_285 OAN_286 OAN_287 OAN_288 OAN_289 OAN_29 OAN_290 OAN_291 OAN_292 OAN_293 OAN_294 OAN_295 OAN_296 OAN_297 OAN_298 OAN_299 OAN_3 OAN_30 OAN_300 OAN_301 OAN_302 OAN_303 OAN_304 OAN_305 OAN_306 OAN_307 OAN_308 OAN_309 OAN_31 OAN_310 OAN_311 OAN_312 OAN_313 OAN_314 OAN_315 OAN_316 OAN_317 OAN_318 OAN_319 OAN_32 OAN_320 OAN_321 OAN_322 OAN_323 OAN_324 OAN_325 OAN_326 OAN_327 OAN_328 OAN_329 OAN_33 OAN_330 OAN_331 OAN_332 OAN_333 OAN_334 OAN_335 OAN_336 OAN_337 OAN_338 OAN_339 OAN_34 OAN_340 OAN_341 OAN_342 OAN_343 OAN_344 OAN_345 OAN_346 OAN_347 OAN_348 OAN_349 OAN_35 OAN_350 OAN_351 OAN_352 OAN_353 OAN_354 OAN_355 OAN_356 OAN_357 OAN_358 OAN_359 OAN_36 OAN_360 OAN_361 OAN_362 OAN_363 OAN_364 OAN_365 OAN_366 OAN_367 OAN_368 OAN_369 OAN_37 OAN_370 OAN_371 OAN_372 OAN_373 OAN_374 OAN_375 OAN_376 OAN_377 OAN_378 OAN_379 OAN_38 OAN_380 OAN_381 OAN_382 OAN_383 OAN_384 OAN_385 OAN_386 OAN_387 OAN_388 OAN_389 OAN_39 OAN_390 OAN_391 OAN_392 OAN_393 OAN_394 OAN_395 OAN_396 OAN_397 OAN_398 OAN_399 OAN_4 OAN_40 OAN_400 OAN_401 OAN_402 OAN_403 OAN_404 OAN_405 OAN_406 OAN_407 OAN_408 OAN_409 OAN_41 OAN_410 OAN_411 OAN_412 OAN_413 OAN_414 OAN_415 OAN_416 OAN_417 OAN_418 OAN_419 OAN_42 OAN_420 OAN_421 OAN_422 OAN_423 OAN_424 OAN_425 OAN_426 OAN_427 OAN_428 OAN_429 OAN_43 OAN_430 OAN_431 OAN_432 OAN_433 OAN_434 OAN_435 OAN_436 OAN_437 OAN_438 OAN_439 OAN_44 OAN_440 OAN_441 OAN_442 OAN_443 OAN_444 OAN_445 OAN_446 OAN_447 OAN_448 OAN_449 OAN_45 OAN_450 OAN_451 OAN_452 OAN_453 OAN_454 OAN_455 OAN_456 OAN_457 OAN_458 OAN_459 OAN_46 OAN_460 OAN_461 OAN_462 OAN_463 OAN_464 OAN_465 OAN_466 OAN_467 OAN_468 OAN_469 OAN_47 OAN_470 OAN_471 OAN_472 OAN_473 OAN_474 OAN_475 OAN_476 OAN_477 OAN_478 OAN_479 OAN_48 OAN_480 OAN_481 OAN_482 OAN_483 OAN_484 OAN_485 OAN_486 OAN_487 OAN_488 OAN_489 OAN_49 OAN_490 OAN_491 OAN_492 OAN_493 OAN_494 OAN_495 OAN_496 OAN_497 OAN_498 OAN_499 OAN_5 OAN_50 OAN_500 OAN_501 OAN_502 OAN_503 OAN_504 OAN_505 OAN_506 OAN_507 OAN_508 OAN_509 OAN_51 OAN_510 OAN_511 OAN_512 OAN_513 OAN_514 OAN_515 OAN_516 OAN_517 OAN_518 OAN_519 OAN_52 OAN_520 OAN_521 OAN_522 OAN_523 OAN_524 OAN_525 OAN_526 OAN_527 OAN_528 OAN_529 OAN_53 OAN_530 OAN_531 OAN_532 OAN_533 OAN_534 OAN_535 OAN_536 OAN_537 OAN_538 OAN_539 OAN_54 OAN_540 OAN_541 OAN_542 OAN_543 OAN_544 OAN_545 OAN_546 OAN_547 OAN_548 OAN_549 OAN_55 OAN_550 OAN_551 OAN_552 OAN_553 OAN_554 OAN_555 OAN_556 OAN_557 OAN_558 OAN_559 OAN_56 OAN_560 OAN_561 OAN_562 OAN_563 OAN_564 OAN_565 OAN_566 OAN_567 OAN_568 OAN_569 OAN_57 OAN_570 OAN_571 OAN_572 OAN_573 OAN_574 OAN_575 OAN_576 OAN_577 OAN_578 OAN_579 OAN_58 OAN_580 OAN_581 OAN_582 OAN_583 OAN_584 OAN_585 OAN_586 OAN_587 OAN_588 OAN_589 OAN_59 OAN_590 OAN_591 OAN_592 OAN_593 OAN_594 OAN_595 OAN_596 OAN_597 OAN_598 OAN_599 OAN_6 OAN_60 OAN_600 OAN_601 OAN_602 OAN_603 OAN_604 OAN_605 OAN_606 OAN_607 OAN_608 OAN_609 OAN_61 OAN_610 OAN_611 OAN_612 OAN_613 OAN_614 OAN_615 OAN_616 OAN_617 OAN_618 OAN_619 OAN_62 OAN_620 OAN_621 OAN_622 OAN_623 OAN_624 OAN_625 OAN_626 OAN_627 OAN_628 OAN_629 OAN_63 OAN_630 OAN_631 OAN_632 OAN_633 OAN_634 OAN_635 OAN_636 OAN_637 OAN_638 OAN_639 OAN_64 OAN_640 OAN_641 OAN_642 OAN_643 OAN_644 OAN_645 OAN_646 OAN_647 OAN_648 OAN_649 OAN_65 OAN_650 OAN_651 OAN_652 OAN_653 OAN_654 OAN_655 OAN_656 OAN_657 OAN_658 OAN_659 OAN_66 OAN_660 OAN_661 OAN_662 OAN_663 OAN_664 OAN_665 OAN_666 OAN_667 OAN_668 OAN_669 OAN_67 OAN_670 OAN_671 OAN_672 OAN_673 OAN_674 OAN_675 OAN_676 OAN_677 OAN_678 OAN_679 OAN_68 OAN_680 OAN_681 OAN_682 OAN_683 OAN_684 OAN_685 OAN_686 OAN_687 OAN_688 OAN_689 OAN_69 OAN_690 OAN_691 OAN_692 OAN_693 OAN_694 OAN_695 OAN_696 OAN_697 OAN_698 OAN_699 OAN_7 OAN_70 OAN_700 OAN_701 OAN_702 OAN_703 OAN_704 OAN_705 OAN_706 OAN_707 OAN_708 OAN_709 OAN_71 OAN_710 OAN_711 OAN_712 OAN_713 OAN_714 OAN_715 OAN_716 OAN_717 OAN_718 OAN_719 OAN_72 OAN_720 OAN_721 OAN_722 OAN_723 OAN_724 OAN_725 OAN_726 OAN_727 OAN_728 OAN_729 OAN_73 OAN_730 OAN_731 OAN_732 OAN_733 OAN_734 OAN_735 OAN_736 OAN_737 OAN_738 OAN_739 OAN_74 OAN_740 OAN_741 OAN_742 OAN_743 OAN_744 OAN_745 OAN_746 OAN_747 OAN_748 OAN_749 OAN_75 OAN_750 OAN_751 OAN_752 OAN_753 OAN_754 OAN_755 OAN_756 OAN_757 OAN_758 OAN_759 OAN_76 OAN_760 OAN_761 OAN_762 OAN_763 OAN_764 OAN_765 OAN_766 OAN_767 OAN_768 OAN_769 OAN_77 OAN_770 OAN_771 OAN_772 OAN_773 OAN_774 OAN_775 OAN_776 OAN_777 OAN_778 OAN_779 OAN_78 OAN_780 OAN_781 OAN_782 OAN_783 OAN_784 OAN_785 OAN_786 OAN_787 OAN_788 OAN_789 OAN_79 OAN_790 OAN_791 OAN_792 OAN_793 OAN_794 OAN_795 OAN_796 OAN_797 OAN_798 OAN_799 OAN_8 OAN_80 OAN_800 OAN_801 OAN_802 OAN_803 OAN_804 OAN_805 OAN_806 OAN_807 OAN_808 OAN_809 OAN_81 OAN_810 OAN_811 OAN_812 OAN_813 OAN_814 OAN_815 OAN_816 OAN_817 OAN_818 OAN_819 OAN_82 OAN_820 OAN_821 OAN_822 OAN_823 OAN_824 OAN_825 OAN_826 OAN_827 OAN_828 OAN_829 OAN_83 OAN_830 OAN_831 OAN_832 OAN_833 OAN_834 OAN_835 OAN_836 OAN_837 OAN_838 OAN_839 OAN_84 OAN_840 OAN_85 OAN_86 OAN_87 OAN_88 OAN_89 OAN_9 OAN_90 OAN_91 OAN_92 OAN_93 OAN_94 OAN_95 OAN_96 OAN_97 OAN_98 OAN_99 PCI_100 PCI_101 PCI_105 PCI_106 PCI_107 PCI_108 PCI_109 PCI_11 PCI_110 PCI_111 PCI_113 PCI_114 PCI_115 PCI_116 PCI_12 PCI_13 PCI_14 PCI_17 PCI_18 PCI_19 PCI_20 PCI_21 PCI_22 PCI_23 PCI_25 PCI_26 PCI_27 PCI_28 PCI_3 PCI_4 PCI_5 PCI_6 PCI_60 PCI_61 PCI_62 PCI_63 PCI_64 PCI_65 PCI_66 PCI_68 PCI_69 PCI_7 PCI_70 PCI_71 PCI_75 PCI_76 PCI_77 PCI_78 PCI_79 PCI_8 PCI_80 PCI_81 PCI_83 PCI_84 PCI_85 PCI_86 PCI_9 PCI_90 PCI_91 PCI_92 PCI_93 PCI_94 PCI_95 PCI_96 PCI_98 PCI_99 
//  test 2  kill  ==> EAM_101 EAM_102 EAM_103 EAM_104 EAM_105 EAM_106 EAM_107 EAM_108 EAM_110 EAM_111 EAM_113 EAM_114 EAM_115 EAM_117 EAM_118 EAM_119 EAM_120 EAM_121 EAM_122 EAM_123 EAM_124 EAM_125 EAM_127 EAM_128 EAM_130 EAM_132 EAM_133 EAM_135 EAM_136 EAM_137 EAM_138 EAM_139 EAM_140 EAM_141 EAM_144 EAM_145 EAM_146 EAM_147 EAM_148 EAM_44 EAM_45 EAM_46 EAM_47 EAM_48 EAM_49 EAM_51 EAM_52 EAM_53 EAM_54 EAM_55 EAM_56 EAM_58 EAM_59 EAM_60 EAM_61 EAM_62 EAM_63 EAM_64 EAM_65 EAM_66 EAM_67 EAM_68 EAM_69 EAM_70 EAM_71 EAM_72 EAM_73 EAM_76 EAM_77 EAM_78 EAM_79 EAM_80 EAM_81 EAM_82 EAM_84 EAM_85 EAM_86 EAM_87 EAM_88 EAM_89 EAM_90 EAM_91 EAM_92 EAM_93 EAM_95 EAM_96 EAM_98 EAM_99 OMR_1 PCI_147 PCI_148 PCI_149 PCI_150 PCI_151 PCI_152 PCI_153 PCI_155 PCI_156 PCI_157 PCI_158 
//  test 3  kill  ==> EAM_149 EAM_150 EAM_152 EAM_153 
//  test 4  kill  ==> EAM_154 EAM_156 EAM_157 EAM_158 
//  test 5  kill  ==> EAM_100 EAM_112 EAM_116 EAM_126 EAM_131 EAM_134 EAM_142 EAM_143 EAM_74 EAM_75 EAM_94 EAM_97 


public String test3(){  //test 3  kill  ==> EAM_1 EAM_10 EAM_11 EAM_12 EAM_13 EAM_14 EAM_15 EAM_16 EAM_17 EAM_18 EAM_19 EAM_2 EAM_20 EAM_21 EAM_22 EAM_23 EAM_24 EAM_25 EAM_26 EAM_27 EAM_28 EAM_29 EAM_3 EAM_30 EAM_31 EAM_32 EAM_33 EAM_34 EAM_35 EAM_36 EAM_37 EAM_38 EAM_39 EAM_4 EAM_40 EAM_41 EAM_42 EAM_5 EAM_6 EAM_7 EAM_8 EAM_9 IOD_1 IOD_2 IOD_5 OAN_1 OAN_10 OAN_100 OAN_101 OAN_102 OAN_103 OAN_104 OAN_105 OAN_106 OAN_107 OAN_108 OAN_109 OAN_11 OAN_110 OAN_111 OAN_112 OAN_113 OAN_114 OAN_115 OAN_116 OAN_117 OAN_118 OAN_119 OAN_12 OAN_120 OAN_121 OAN_122 OAN_123 OAN_124 OAN_125 OAN_126 OAN_127 OAN_128 OAN_129 OAN_13 OAN_130 OAN_131 OAN_132 OAN_133 OAN_134 OAN_135 OAN_136 OAN_137 OAN_138 OAN_139 OAN_14 OAN_140 OAN_141 OAN_142 OAN_143 OAN_144 OAN_145 OAN_146 OAN_147 OAN_148 OAN_149 OAN_15 OAN_150 OAN_151 OAN_152 OAN_153 OAN_154 OAN_155 OAN_156 OAN_157 OAN_158 OAN_159 OAN_16 OAN_160 OAN_161 OAN_162 OAN_163 OAN_164 OAN_165 OAN_166 OAN_167 OAN_168 OAN_169 OAN_17 OAN_170 OAN_171 OAN_172 OAN_173 OAN_174 OAN_175 OAN_176 OAN_177 OAN_178 OAN_179 OAN_18 OAN_180 OAN_181 OAN_182 OAN_183 OAN_184 OAN_185 OAN_186 OAN_187 OAN_188 OAN_189 OAN_19 OAN_190 OAN_191 OAN_192 OAN_193 OAN_194 OAN_195 OAN_196 OAN_197 OAN_198 OAN_199 OAN_2 OAN_20 OAN_200 OAN_201 OAN_202 OAN_203 OAN_204 OAN_205 OAN_206 OAN_207 OAN_208 OAN_209 OAN_21 OAN_210 OAN_211 OAN_212 OAN_213 OAN_214 OAN_215 OAN_216 OAN_217 OAN_218 OAN_219 OAN_22 OAN_220 OAN_221 OAN_222 OAN_223 OAN_224 OAN_225 OAN_226 OAN_227 OAN_228 OAN_229 OAN_23 OAN_230 OAN_231 OAN_232 OAN_233 OAN_234 OAN_235 OAN_236 OAN_237 OAN_238 OAN_239 OAN_24 OAN_240 OAN_241 OAN_242 OAN_243 OAN_244 OAN_245 OAN_246 OAN_247 OAN_248 OAN_249 OAN_25 OAN_250 OAN_251 OAN_252 OAN_253 OAN_254 OAN_255 OAN_256 OAN_257 OAN_258 OAN_259 OAN_26 OAN_260 OAN_261 OAN_262 OAN_263 OAN_264 OAN_265 OAN_266 OAN_267 OAN_268 OAN_269 OAN_27 OAN_270 OAN_271 OAN_272 OAN_273 OAN_274 OAN_275 OAN_276 OAN_277 OAN_278 OAN_279 OAN_28 OAN_280 OAN_281 OAN_282 OAN_283 OAN_284 OAN_285 OAN_286 OAN_287 OAN_288 OAN_289 OAN_29 OAN_290 OAN_291 OAN_292 OAN_293 OAN_294 OAN_295 OAN_296 OAN_297 OAN_298 OAN_299 OAN_3 OAN_30 OAN_300 OAN_301 OAN_302 OAN_303 OAN_304 OAN_305 OAN_306 OAN_307 OAN_308 OAN_309 OAN_31 OAN_310 OAN_311 OAN_312 OAN_313 OAN_314 OAN_315 OAN_316 OAN_317 OAN_318 OAN_319 OAN_32 OAN_320 OAN_321 OAN_322 OAN_323 OAN_324 OAN_325 OAN_326 OAN_327 OAN_328 OAN_329 OAN_33 OAN_330 OAN_331 OAN_332 OAN_333 OAN_334 OAN_335 OAN_336 OAN_337 OAN_338 OAN_339 OAN_34 OAN_340 OAN_341 OAN_342 OAN_343 OAN_344 OAN_345 OAN_346 OAN_347 OAN_348 OAN_349 OAN_35 OAN_350 OAN_351 OAN_352 OAN_353 OAN_354 OAN_355 OAN_356 OAN_357 OAN_358 OAN_359 OAN_36 OAN_360 OAN_361 OAN_362 OAN_363 OAN_364 OAN_365 OAN_366 OAN_367 OAN_368 OAN_369 OAN_37 OAN_370 OAN_371 OAN_372 OAN_373 OAN_374 OAN_375 OAN_376 OAN_377 OAN_378 OAN_379 OAN_38 OAN_380 OAN_381 OAN_382 OAN_383 OAN_384 OAN_385 OAN_386 OAN_387 OAN_388 OAN_389 OAN_39 OAN_390 OAN_391 OAN_392 OAN_393 OAN_394 OAN_395 OAN_396 OAN_397 OAN_398 OAN_399 OAN_4 OAN_40 OAN_400 OAN_401 OAN_402 OAN_403 OAN_404 OAN_405 OAN_406 OAN_407 OAN_408 OAN_409 OAN_41 OAN_410 OAN_411 OAN_412 OAN_413 OAN_414 OAN_415 OAN_416 OAN_417 OAN_418 OAN_419 OAN_42 OAN_420 OAN_421 OAN_422 OAN_423 OAN_424 OAN_425 OAN_426 OAN_427 OAN_428 OAN_429 OAN_43 OAN_430 OAN_431 OAN_432 OAN_433 OAN_434 OAN_435 OAN_436 OAN_437 OAN_438 OAN_439 OAN_44 OAN_440 OAN_441 OAN_442 OAN_443 OAN_444 OAN_445 OAN_446 OAN_447 OAN_448 OAN_449 OAN_45 OAN_450 OAN_451 OAN_452 OAN_453 OAN_454 OAN_455 OAN_456 OAN_457 OAN_458 OAN_459 OAN_46 OAN_460 OAN_461 OAN_462 OAN_463 OAN_464 OAN_465 OAN_466 OAN_467 OAN_468 OAN_469 OAN_47 OAN_470 OAN_471 OAN_472 OAN_473 OAN_474 OAN_475 OAN_476 OAN_477 OAN_478 OAN_479 OAN_48 OAN_480 OAN_481 OAN_482 OAN_483 OAN_484 OAN_485 OAN_486 OAN_487 OAN_488 OAN_489 OAN_49 OAN_490 OAN_491 OAN_492 OAN_493 OAN_494 OAN_495 OAN_496 OAN_497 OAN_498 OAN_499 OAN_5 OAN_50 OAN_500 OAN_501 OAN_502 OAN_503 OAN_504 OAN_505 OAN_506 OAN_507 OAN_508 OAN_509 OAN_51 OAN_510 OAN_511 OAN_512 OAN_513 OAN_514 OAN_515 OAN_516 OAN_517 OAN_518 OAN_519 OAN_52 OAN_520 OAN_521 OAN_522 OAN_523 OAN_524 OAN_525 OAN_526 OAN_527 OAN_528 OAN_529 OAN_53 OAN_530 OAN_531 OAN_532 OAN_533 OAN_534 OAN_535 OAN_536 OAN_537 OAN_538 OAN_539 OAN_54 OAN_540 OAN_541 OAN_542 OAN_543 OAN_544 OAN_545 OAN_546 OAN_547 OAN_548 OAN_549 OAN_55 OAN_550 OAN_551 OAN_552 OAN_553 OAN_554 OAN_555 OAN_556 OAN_557 OAN_558 OAN_559 OAN_56 OAN_560 OAN_561 OAN_562 OAN_563 OAN_564 OAN_565 OAN_566 OAN_567 OAN_568 OAN_569 OAN_57 OAN_570 OAN_571 OAN_572 OAN_573 OAN_574 OAN_575 OAN_576 OAN_577 OAN_578 OAN_579 OAN_58 OAN_580 OAN_581 OAN_582 OAN_583 OAN_584 OAN_585 OAN_586 OAN_587 OAN_588 OAN_589 OAN_59 OAN_590 OAN_591 OAN_592 OAN_593 OAN_594 OAN_595 OAN_596 OAN_597 OAN_598 OAN_599 OAN_6 OAN_60 OAN_600 OAN_601 OAN_602 OAN_603 OAN_604 OAN_605 OAN_606 OAN_607 OAN_608 OAN_609 OAN_61 OAN_610 OAN_611 OAN_612 OAN_613 OAN_614 OAN_615 OAN_616 OAN_617 OAN_618 OAN_619 OAN_62 OAN_620 OAN_621 OAN_622 OAN_623 OAN_624 OAN_625 OAN_626 OAN_627 OAN_628 OAN_629 OAN_63 OAN_630 OAN_631 OAN_632 OAN_633 OAN_634 OAN_635 OAN_636 OAN_637 OAN_638 OAN_639 OAN_64 OAN_640 OAN_641 OAN_642 OAN_643 OAN_644 OAN_645 OAN_646 OAN_647 OAN_648 OAN_649 OAN_65 OAN_650 OAN_651 OAN_652 OAN_653 OAN_654 OAN_655 OAN_656 OAN_657 OAN_658 OAN_659 OAN_66 OAN_660 OAN_661 OAN_662 OAN_663 OAN_664 OAN_665 OAN_666 OAN_667 OAN_668 OAN_669 OAN_67 OAN_670 OAN_671 OAN_672 OAN_673 OAN_674 OAN_675 OAN_676 OAN_677 OAN_678 OAN_679 OAN_68 OAN_680 OAN_681 OAN_682 OAN_683 OAN_684 OAN_685 OAN_686 OAN_687 OAN_688 OAN_689 OAN_69 OAN_690 OAN_691 OAN_692 OAN_693 OAN_694 OAN_695 OAN_696 OAN_697 OAN_698 OAN_699 OAN_7 OAN_70 OAN_700 OAN_701 OAN_702 OAN_703 OAN_704 OAN_705 OAN_706 OAN_707 OAN_708 OAN_709 OAN_71 OAN_710 OAN_711 OAN_712 OAN_713 OAN_714 OAN_715 OAN_716 OAN_717 OAN_718 OAN_719 OAN_72 OAN_720 OAN_721 OAN_722 OAN_723 OAN_724 OAN_725 OAN_726 OAN_727 OAN_728 OAN_729 OAN_73 OAN_730 OAN_731 OAN_732 OAN_733 OAN_734 OAN_735 OAN_736 OAN_737 OAN_738 OAN_739 OAN_74 OAN_740 OAN_741 OAN_742 OAN_743 OAN_744 OAN_745 OAN_746 OAN_747 OAN_748 OAN_749 OAN_75 OAN_750 OAN_751 OAN_752 OAN_753 OAN_754 OAN_755 OAN_756 OAN_757 OAN_758 OAN_759 OAN_76 OAN_760 OAN_761 OAN_762 OAN_763 OAN_764 OAN_765 OAN_766 OAN_767 OAN_768 OAN_769 OAN_77 OAN_770 OAN_771 OAN_772 OAN_773 OAN_774 OAN_775 OAN_776 OAN_777 OAN_778 OAN_779 OAN_78 OAN_780 OAN_781 OAN_782 OAN_783 OAN_784 OAN_785 OAN_786 OAN_787 OAN_788 OAN_789 OAN_79 OAN_790 OAN_791 OAN_792 OAN_793 OAN_794 OAN_795 OAN_796 OAN_797 OAN_798 OAN_799 OAN_8 OAN_80 OAN_800 OAN_801 OAN_802 OAN_803 OAN_804 OAN_805 OAN_806 OAN_807 OAN_808 OAN_809 OAN_81 OAN_810 OAN_811 OAN_812 OAN_813 OAN_814 OAN_815 OAN_816 OAN_817 OAN_818 OAN_819 OAN_82 OAN_820 OAN_821 OAN_822 OAN_823 OAN_824 OAN_825 OAN_826 OAN_827 OAN_828 OAN_829 OAN_83 OAN_830 OAN_831 OAN_832 OAN_833 OAN_834 OAN_835 OAN_836 OAN_837 OAN_838 OAN_839 OAN_84 OAN_840 OAN_85 OAN_86 OAN_87 OAN_88 OAN_89 OAN_9 OAN_90 OAN_91 OAN_92 OAN_93 OAN_94 OAN_95 OAN_96 OAN_97 OAN_98 OAN_99 PCI_100 PCI_101 PCI_105 PCI_106 PCI_107 PCI_108 PCI_109 PCI_11 PCI_110 PCI_111 PCI_113 PCI_114 PCI_115 PCI_116 PCI_12 PCI_13 PCI_14 PCI_17 PCI_18 PCI_19 PCI_20 PCI_21 PCI_22 PCI_23 PCI_25 PCI_26 PCI_27 PCI_28 PCI_3 PCI_4 PCI_5 PCI_6 PCI_60 PCI_61 PCI_62 PCI_63 PCI_64 PCI_65 PCI_66 PCI_68 PCI_69 PCI_7 PCI_70 PCI_71 PCI_75 PCI_76 PCI_77 PCI_78 PCI_79 PCI_8 PCI_80 PCI_81 PCI_83 PCI_84 PCI_85 PCI_86 PCI_9 PCI_90 PCI_91 PCI_92 PCI_93 PCI_94 PCI_95 PCI_96 PCI_98 PCI_99  
   LocalDateTime ldt = new LocalDateTime(ISOChronology.getInstanceUTC().getDateTimeMillis(2000, 10, 01, 8, 10, 10, 90)); 
   java.util.Date d1 = new Date(2000, 5, 20, 06, 10, 8); 
	return ldt.fromDateFields(d1).toString();
 }

public DateTime test4(){// kill  ==> EAM_101 EAM_102 EAM_103 EAM_104 EAM_105 EAM_106 EAM_107 EAM_108 EAM_110 EAM_111 EAM_113 EAM_114 EAM_115 EAM_117 EAM_118 EAM_119 EAM_120 EAM_121 EAM_122 EAM_123 EAM_124 EAM_125 EAM_127 EAM_128 EAM_130 EAM_132 EAM_133 EAM_135 EAM_136 EAM_137 EAM_138 EAM_139 EAM_140 EAM_141 EAM_144 EAM_145 EAM_146 EAM_147 EAM_148 EAM_44 EAM_45 EAM_46 EAM_47 EAM_48 EAM_49 EAM_51 EAM_52 EAM_53 EAM_54 EAM_55 EAM_56 EAM_58 EAM_59 EAM_60 EAM_61 EAM_62 EAM_63 EAM_64 EAM_65 EAM_66 EAM_67 EAM_68 EAM_69 EAM_70 EAM_71 EAM_72 EAM_73 EAM_76 EAM_77 EAM_78 EAM_79 EAM_80 EAM_81 EAM_82 EAM_84 EAM_85 EAM_86 EAM_87 EAM_88 EAM_89 EAM_90 EAM_91 EAM_92 EAM_93 EAM_95 EAM_96 EAM_98 EAM_99 OMR_1 PCI_11 PCI_12 PCI_13 PCI_14 PCI_147 PCI_148 PCI_149 PCI_150 PCI_151 PCI_152 PCI_153 PCI_155 PCI_156 PCI_157 PCI_158 PCI_17 PCI_18 PCI_19 PCI_20 PCI_21 PCI_22 PCI_23 PCI_25 PCI_26 PCI_27 PCI_28 PCI_3 PCI_4 PCI_5 PCI_6 PCI_7 PCI_8 PCI_9       
   LocalDateTime lt1 = new LocalDateTime(ISOChronology.getInstanceUTC().getDateTimeMillis(2000, 10, 01, 01),ISOChronology.getInstanceUTC());    
	return  lt1.toDateTime(DateTimeZone.getDefault()); 
 }

public String test5(){//  kill  ==> EAM_149 EAM_150 EAM_151 EAM_152 EAM_153 IOD_1 IOD_2 IOD_5 PCI_100 PCI_101 PCI_105 PCI_106 PCI_107 PCI_108 PCI_109 PCI_11 PCI_110 PCI_111 PCI_113 PCI_114 PCI_115 PCI_116 PCI_12 PCI_13 PCI_14 PCI_17 PCI_18 PCI_19 PCI_20 PCI_21 PCI_22 PCI_23 PCI_25 PCI_26 PCI_27 PCI_28 PCI_3 PCI_4 PCI_5 PCI_6 PCI_60 PCI_61 PCI_62 PCI_63 PCI_64 PCI_65 PCI_66 PCI_68 PCI_69 PCI_7 PCI_70 PCI_71 PCI_75 PCI_76 PCI_77 PCI_78 PCI_79 PCI_8 PCI_80 PCI_81 PCI_83 PCI_84 PCI_85 PCI_86 PCI_9 PCI_90 PCI_91 PCI_92 PCI_93 PCI_94 PCI_95 PCI_96 PCI_98 PCI_99        
   LocalDateTime lt1 = new LocalDateTime(ISOChronology.getInstanceUTC().getDateTimeMillis(2000, 2, 01, 8, 11, 1, 103),ISOChronology.getInstanceUTC());    
	LocalDateTime.Property p = new LocalDateTime.Property(lt1, ISOChronology.getInstanceUTC().dayOfMonth());
	return  p.withMaximumValue().toString(); 
 }

public LocalDateTime test6(){// test 1  kill  ==> EAM_154 EAM_156 EAM_157 EAM_158 PCI_11 PCI_12 PCI_13 PCI_14 PCI_17 PCI_18 PCI_19 PCI_20 PCI_21 PCI_22 PCI_23 PCI_25 PCI_26 PCI_27 PCI_28 PCI_3 PCI_4 PCI_5 PCI_6 PCI_7 PCI_8 PCI_9        
   LocalDateTime lt1 = new LocalDateTime(ISOChronology.getInstanceUTC().getDateTimeMillis(2000, 10, 01, 01),ISOChronology.getInstanceUTC());    
	LocalDateTime.Property p = new LocalDateTime.Property(lt1, BuddhistChronology.getInstanceUTC().yearOfEra());
	return  p.withMinimumValue(); 
 }

public DateTime test7(){//  kill  ==> EAM_100 EAM_101 EAM_102 EAM_103 EAM_104 EAM_105 EAM_106 EAM_107 EAM_108 EAM_109 EAM_110 EAM_111 EAM_112 EAM_113 EAM_114 EAM_115 EAM_116 EAM_117 EAM_118 EAM_119 EAM_120 EAM_121 EAM_122 EAM_123 EAM_124 EAM_125 EAM_126 EAM_129 EAM_130 EAM_131 EAM_132 EAM_133 EAM_134 EAM_135 EAM_136 EAM_137 EAM_138 EAM_139 EAM_140 EAM_141 EAM_142 EAM_143 EAM_144 EAM_145 EAM_146 EAM_147 EAM_148 EAM_44 EAM_45 EAM_46 EAM_47 EAM_48 EAM_49 EAM_51 EAM_52 EAM_53 EAM_54 EAM_55 EAM_56 EAM_58 EAM_59 EAM_60 EAM_61 EAM_62 EAM_63 EAM_64 EAM_65 EAM_66 EAM_67 EAM_68 EAM_69 EAM_70 EAM_71 EAM_72 EAM_73 EAM_74 EAM_75 EAM_76 EAM_77 EAM_78 EAM_80 EAM_81 EAM_82 EAM_84 EAM_85 EAM_86 EAM_87 EAM_88 EAM_89 EAM_90 EAM_91 EAM_92 EAM_93 EAM_94 EAM_95 EAM_96 EAM_97 EAM_98 EAM_99 OMR_1 PCI_11 PCI_12 PCI_13 PCI_14 PCI_147 PCI_148 PCI_149 PCI_150 PCI_151 PCI_152 PCI_153 PCI_155 PCI_156 PCI_157 PCI_158 PCI_17 PCI_18 PCI_19 PCI_20 PCI_21 PCI_22 PCI_23 PCI_25 PCI_26 PCI_27 PCI_28 PCI_3 PCI_4 PCI_5 PCI_6 PCI_7 PCI_8 PCI_9 
    LocalDateTime lt1 = new LocalDateTime(ISOChronology.getInstanceUTC().getDateTimeMillis(2000, 10, 01, 8, 11, 1, 103),ISOChronology.getInstanceUTC());
    return lt1.toDateTime(DateTimeZone.getDefault());
 }
 
 public String test8(){// test 1  kill  ==> EAM_100 EAM_101 EAM_102 EAM_103 EAM_104 EAM_105 EAM_106 EAM_107 EAM_108 EAM_109 EAM_110 EAM_111 EAM_112 EAM_113 EAM_114 EAM_115 EAM_116 EAM_117 EAM_118 EAM_119 EAM_120 EAM_121 EAM_122 EAM_123 EAM_124 EAM_125 EAM_126 EAM_127 EAM_128 EAM_129 EAM_130 EAM_131 EAM_132 EAM_133 EAM_134 EAM_135 EAM_136 EAM_137 EAM_138 EAM_139 EAM_140 EAM_141 EAM_142 EAM_143 EAM_144 EAM_145 EAM_146 EAM_147 EAM_148 EAM_44 EAM_45 EAM_46 EAM_47 EAM_48 EAM_49 EAM_50 EAM_51 EAM_53 EAM_55 EAM_56 EAM_57 EAM_59 EAM_60 EAM_62 EAM_63 EAM_64 EAM_65 EAM_66 EAM_68 EAM_69 EAM_70 EAM_71 EAM_73 EAM_74 EAM_75 EAM_78 EAM_79 EAM_80 EAM_81 EAM_82 EAM_83 EAM_84 EAM_85 EAM_86 EAM_88 EAM_89 EAM_90 EAM_91 EAM_92 EAM_93 EAM_94 EAM_95 EAM_96 EAM_97 EAM_98 EAM_99 OMR_1 PCI_11 PCI_12 PCI_13 PCI_14 PCI_147 PCI_148 PCI_149 PCI_150 PCI_151 PCI_152 PCI_153 PCI_155 PCI_156 PCI_157 PCI_158 PCI_17 PCI_18 PCI_19 PCI_20 PCI_21 PCI_22 PCI_23 PCI_25 PCI_26 PCI_27 PCI_28 PCI_3 PCI_4 PCI_5 PCI_6 PCI_7 PCI_8 PCI_9 
    LocalDateTime lt1 = new LocalDateTime(ISOChronology.getInstanceUTC().getDateTimeMillis(0, 1, 1, 20, 11, 10, 19),ISOChronology.getInstanceUTC());
    DateTimeZone zone = DateTimeZone.forID("+05:00");
	return lt1.toDateTime(zone).toString();
 }
 

//-------------------------kill mutants for JSI1-4 operator-----------OK----------- 
//test 5  kill  ==> JSI_1 PCI_10 PCI_24 
//  test 6  kill  ==> JSI_2 
//  test 7  kill  ==> JSI_3 
//  test 8  kill  ==> JSI_4  
//left 0

 public int test9(){ // JSI_1 PCI_10 PCI_24
   LocalDateTime lt1 = new LocalDateTime(ISOChronology.getInstanceUTC().getDateTimeMillis(2000, 10, 01, 8, 10, 10, 10),ISOChronology.getInstanceUTC());
   LocalDateTime lt2 = new LocalDateTime(BuddhistChronology.getInstanceUTC().getDateTimeMillis(2010, 11, 11, 8, 10, 10, 00),BuddhistChronology.getInstanceUTC());
   return  lt1.getMillisOfSecond();  
 }

 public Chronology test10(){  //JSI_2
   LocalDateTime ld1 = new LocalDateTime(ISOChronology.getInstanceUTC());
   LocalDateTime ld2 = new LocalDateTime(BuddhistChronology.getInstanceUTC());
   return ld1.getChronology();  
 }

 public Chronology test11(){ //JSI_3
  LocalDateTime lt1 = new LocalDateTime(ISOChronology.getInstanceUTC());
  LocalDateTime lt2 = new LocalDateTime(BuddhistChronology.getInstanceUTC());
  LocalDateTime.Property p1 = new LocalDateTime.Property(lt1, ISOChronology.getInstanceUTC().minuteOfHour());
  LocalDateTime.Property p2 = new LocalDateTime.Property(lt2, BuddhistChronology.getInstanceUTC().hourOfDay());
  return  p1.getChronology();  
 }

 public DateTimeField test12(){ //JSI_4
    LocalDateTime ld1 = new LocalDateTime(ISOChronology.getInstanceUTC().getDateTimeMillis(2000, 10, 01, 01));
    LocalDateTime.Property P1 = new LocalDateTime.Property(ld1,ISOChronology.getInstanceUTC().year());
    LocalDateTime.Property P2 = new LocalDateTime.Property(ld1, BuddhistChronology.getInstanceUTC().monthOfYear());
    return  P1.getField();  
 }
 
//------------------------ OMR 1-4-----------------------------------OK-----------------------------------------------

//left: OMR4
 public String test13(){//OMR_2 
   LocalDateTime lt1 = new LocalDateTime(ISOChronology.getInstanceUTC().getDateTimeMillis(2000, 10, 01, 8, 10, 10, 10),ISOChronology.getInstanceUTC());
   String st = "2010-08-08";
   return lt1.toString(st);
 }

 public String test14(){// OMR_3
   LocalDateTime lt1 = new LocalDateTime(ISOChronology.getInstanceUTC().getDateTimeMillis(2000, 10, 01, 8, 10, 10, 10),ISOChronology.getInstanceUTC());
   Locale lc = new Locale("CHINESE");
   String st = "2010-08-08";
   return lt1.toString(st,lc);
 }


//-------------------------PCI 1-262------------now---------------------- 
// test 1  kill  ==> PCI_11 PCI_12 PCI_13 PCI_14 PCI_17 PCI_18 PCI_19 PCI_20 PCI_21 PCI_22 PCI_23 PCI_25 PCI_26 PCI_27 PCI_28 PCI_3 PCI_4 PCI_5 PCI_6 PCI_7 PCI_8 PCI_9 
//  test 2  kill  ==> PCI_100 PCI_101 PCI_105 PCI_106 PCI_107 PCI_108 PCI_109 PCI_110 PCI_111 PCI_113 PCI_114 PCI_115 PCI_116 PCI_31 PCI_32 PCI_33 PCI_34 PCI_35 PCI_36 PCI_37 PCI_39 PCI_40 PCI_41 PCI_42 PCI_60 PCI_61 PCI_62 PCI_63 PCI_64 PCI_65 PCI_66 PCI_68 PCI_69 PCI_70 PCI_71 PCI_75 PCI_76 PCI_77 PCI_78 PCI_79 PCI_80 PCI_81 PCI_83 PCI_84 PCI_85 PCI_86 PCI_90 PCI_91 PCI_92 PCI_93 PCI_94 PCI_95 PCI_96 PCI_98 PCI_99 
//  test 3  kill  ==> PCI_119 PCI_120 PCI_121 PCI_122 PCI_123 PCI_124 PCI_125 PCI_127 PCI_128 PCI_129 PCI_130 PCI_45 PCI_46 PCI_47 PCI_48 PCI_49 PCI_50 PCI_51 PCI_53 PCI_54 PCI_55 PCI_56 
//  test 4  kill  ==> EAM_101 EAM_102 EAM_103 EAM_104 EAM_105 EAM_106 EAM_107 EAM_108 EAM_110 EAM_111 EAM_113 EAM_114 EAM_115 EAM_117 EAM_118 EAM_119 EAM_120 EAM_121 EAM_122 EAM_123 EAM_124 EAM_125 EAM_127 EAM_128 EAM_130 EAM_132 EAM_133 EAM_135 EAM_136 EAM_137 EAM_138 EAM_139 EAM_140 EAM_141 EAM_144 EAM_145 EAM_146 EAM_147 EAM_148 EAM_44 EAM_45 EAM_46 EAM_47 EAM_48 EAM_49 EAM_51 EAM_52 EAM_53 EAM_54 EAM_55 EAM_56 EAM_58 EAM_59 EAM_60 EAM_61 EAM_62 EAM_63 EAM_64 EAM_65 EAM_66 EAM_67 EAM_68 EAM_69 EAM_70 EAM_71 EAM_72 EAM_73 EAM_76 EAM_77 EAM_78 EAM_79 EAM_80 EAM_81 EAM_82 EAM_84 EAM_85 EAM_86 EAM_87 EAM_88 EAM_89 EAM_90 EAM_91 EAM_92 EAM_93 EAM_95 EAM_96 EAM_98 EAM_99 OMR_1 PCI_147 PCI_148 PCI_149 PCI_150 PCI_151 PCI_152 PCI_153 PCI_155 PCI_156 PCI_157 PCI_158 
//  test 5  kill  ==> PCI_133 PCI_134 PCI_135 PCI_136 PCI_137 PCI_138 PCI_139 PCI_141 PCI_142 PCI_143 PCI_144 
//  test 6  kill  ==> IOD_1 IOD_2 IOD_5 PCI_162 PCI_163 PCI_164 PCI_165 PCI_166 PCI_167 PCI_168 PCI_170 PCI_171 PCI_172 PCI_173 PCI_177 PCI_178 PCI_179 PCI_180 PCI_181 PCI_182 PCI_183 PCI_185 PCI_186 PCI_187 PCI_188 PCI_192 PCI_193 PCI_194 PCI_195 PCI_196 PCI_197 PCI_198 PCI_200 PCI_201 PCI_202 PCI_203 
//  test 7  kill  ==> PCI_10 PCI_207 PCI_208 PCI_209 PCI_210 PCI_211 PCI_213 PCI_214 PCI_215 PCI_216 PCI_217 PCI_218 PCI_24 
//  test 8  kill  ==> EAM_100 EAM_112 EAM_116 EAM_126 EAM_131 EAM_134 EAM_142 EAM_143 EAM_74 EAM_75 EAM_94 EAM_97 
//  test 9  kill  ==> PCI_212 
//  test 10  kill  ==> PCI_222 PCI_223 PCI_224 PCI_225 PCI_226 PCI_227 PCI_228 PCI_230 PCI_231 PCI_232 PCI_233 PCI_237 PCI_238 PCI_239 PCI_240 PCI_241 PCI_242 PCI_243 PCI_245 PCI_246 PCI_247 PCI_248 

 
  public Chronology test15(){   //PCI_31-37 PCI_39-42 PCI_60-66 PCI_68-71 PCI_75-81 PCI_83-86 PCI_90-96 PCI_98-101 PCI_105-111 PCI_113-116 
   LocalDateTime lt1 = new LocalDateTime(ISOChronology.getInstanceUTC().getDateTimeMillis(2000, 10, 01, 01),ISOChronology.getInstanceUTC());    
   LocalDateTime lt2 = new LocalDateTime(lt1,DateTimeZone.getDefault());
	return  lt2.getChronology(); 
 }
 
  public boolean test16(){   //  OAN_262 PCI_100 PCI_101 PCI_105 PCI_106 PCI_107 PCI_108 PCI_109 PCI_11-12 PCI_110 PCI_111 PCI_113 PCI_114 PCI_115 PCI_116 PCI_119-125 PCI_127-129 PCI_13 PCI_130 PCI_14 PCI_17 PCI_18 PCI_19 PCI_20 PCI_21 PCI_22 PCI_23 PCI_25 PCI_26 PCI_27 PCI_28 PCI_3 PCI_4 PCI_45 PCI_46 PCI_47 PCI_48 PCI_49 PCI_5 PCI_50 PCI_51 PCI_53 PCI_54 PCI_55 PCI_56 PCI_6 PCI_60 PCI_61 PCI_62 PCI_63 PCI_64 PCI_65 PCI_66 PCI_68 PCI_69 PCI_7 PCI_70 PCI_71 PCI_75 PCI_76 PCI_77 PCI_78 PCI_79 PCI_8 PCI_80 PCI_81 PCI_83 PCI_84 PCI_85 PCI_86 PCI_9 PCI_90 PCI_91 PCI_92 PCI_93 PCI_94 PCI_95 PCI_96 PCI_98 PCI_99    
   LocalDateTime lt1 = new LocalDateTime(ISOChronology.getInstanceUTC().getDateTimeMillis(2000, 10, 01, 01),ISOChronology.getInstanceUTC());    
   LocalDateTime lt2 = new LocalDateTime(lt1,ISOChronology.getInstanceUTC());
	return  lt1.equals(lt2); 
 }
 public int test17(){   //PCI_11-14  PCI_100 PCI_101 PCI_105-111 PCI_113-116 PCI_133-144 PCI_17 PCI_18 PCI_19 PCI_20 PCI_21 PCI_22 PCI_23 PCI_25 PCI_26 PCI_27 PCI_28 PCI_3 PCI_4 PCI_45 PCI_46 PCI_47 PCI_48 PCI_49 PCI_5 PCI_50 PCI_51 PCI_53 PCI_54 PCI_55 PCI_56 PCI_6 PCI_60 PCI_61 PCI_62 PCI_63 PCI_64 PCI_65 PCI_66 PCI_68 PCI_69 PCI_7 PCI_70 PCI_71 PCI_75 PCI_76 PCI_77 PCI_78 PCI_79 PCI_8 PCI_80 PCI_81 PCI_83 PCI_84 PCI_85 PCI_86 PCI_9 PCI_90 PCI_91 PCI_92 PCI_93 PCI_94 PCI_95 PCI_96 PCI_98 PCI_99     
   LocalDateTime lt1 = new LocalDateTime(ISOChronology.getInstanceUTC().getDateTimeMillis(2000, 10, 01, 01),ISOChronology.getInstanceUTC());    
   LocalDateTime lt2 = new LocalDateTime(lt1,ISOChronology.getInstanceUTC());
	return  lt1.compareTo(lt2); 
 }
 
public LocalDateTime test18(){ //??? IOD_1 IOD_2 IOD_5 PCI_162 PCI_163 PCI_164 PCI_165 PCI_166 PCI_167 PCI_168 PCI_170 PCI_171 PCI_172 PCI_173 PCI_177 PCI_178 PCI_179 PCI_180 PCI_181 PCI_182 PCI_183 PCI_185 PCI_186 PCI_187 PCI_188 PCI_192 PCI_193 PCI_194 PCI_195 PCI_196 PCI_197 PCI_198 PCI_200 PCI_201 PCI_202 PCI_203      
   LocalDateTime lt1 = new LocalDateTime(ISOChronology.getInstanceUTC().getDateTimeMillis(2000, 10, 01, 01),ISOChronology.getInstanceUTC());    
	return  lt1.withDate(2010,12,30); 
 }

 public LocalDateTime test19(){   // PCI_10 PCI_207 PCI_208 PCI_209 PCI_210 PCI_211 PCI_213 PCI_214 PCI_215 PCI_216 PCI_217 PCI_218 PCI_24      
    LocalDateTime lt2 = new LocalDateTime(BuddhistChronology.getInstanceUTC()); 
	 LocalDateTime lt1 = lt2.hourOfDay().setCopy(6);   
	 return  lt1.withTime(25, 61, 62, 1001);
 }

 public LocalDateTime test20(){   //PCI_212       
    LocalDateTime lt2 = new LocalDateTime(ISOChronology.getInstanceUTC()); 
	 LocalDateTime lt1 = lt2.hourOfDay().setCopy(6);  
	 LocalDateTime.Property p = new LocalDateTime.Property(lt1, ISOChronology.getInstanceUTC().year());
	 lt1.withTime(24, 60, 60, 102);
	 return lt1.withMinuteOfHour(10);
 }

 public LocalDateTime test21(){   // PCI_222 PCI_223 PCI_224 PCI_225 PCI_226 PCI_227 PCI_228 PCI_230 PCI_231 PCI_232 PCI_233 PCI_237 PCI_238 PCI_239 PCI_240 PCI_241 PCI_242 PCI_243 PCI_245 PCI_246 PCI_247 PCI_248      
    LocalDateTime lt2 = new LocalDateTime(ISOChronology.getInstanceUTC().getDateTimeMillis(2000, 10, 01, 8, 10, 20, 30)); 
	 LocalDateTime lt1 = lt2.hourOfDay().setCopy(6);   
	 return  lt1.withTime(22, 50, 60, 100);
 }
 
 public String test22(){   // PCI_222 PCI_223 PCI_224 PCI_225 PCI_226 PCI_227 PCI_228 PCI_230 PCI_231 PCI_232 PCI_233 PCI_237 PCI_238 PCI_239 PCI_240 PCI_241 PCI_242 PCI_243 PCI_245 PCI_246 PCI_247 PCI_248      
    LocalDateTime lt2 = new LocalDateTime(BuddhistChronology.getInstanceUTC().getDateTimeMillis(2000, 10, 01, 8, 10, 20, 30), BuddhistChronology.getInstanceUTC());   
	 return  lt2.withTime(22, 50, 59, 109).toString();
 }
  public String test23(){   // PCI_222 PCI_223 PCI_224 PCI_225 PCI_226 PCI_227 PCI_228 PCI_230 PCI_231 PCI_232 PCI_233 PCI_237 PCI_238 PCI_239 PCI_240 PCI_241 PCI_242 PCI_243 PCI_245 PCI_246 PCI_247 PCI_248      
    LocalDateTime lt2 = new LocalDateTime(ISOChronology.getInstanceUTC().getDateTimeMillis(2000, 10, 01, 8, 10, 20, 30), ISOChronology.getInstanceUTC());   
	 return  lt2.withTime(22, 50, 59, 109).toString();
 }

  public boolean test24(){   //  OAN_262 PCI_100 PCI_101 PCI_105 PCI_106 PCI_107 PCI_108 PCI_109 PCI_11-12 PCI_110 PCI_111 PCI_113 PCI_114 PCI_115 PCI_116 PCI_119-125 PCI_127-129 PCI_13 PCI_130 PCI_14 PCI_17 PCI_18 PCI_19 PCI_20 PCI_21 PCI_22 PCI_23 PCI_25 PCI_26 PCI_27 PCI_28 PCI_3 PCI_4 PCI_45 PCI_46 PCI_47 PCI_48 PCI_49 PCI_5 PCI_50 PCI_51 PCI_53 PCI_54 PCI_55 PCI_56 PCI_6 PCI_60 PCI_61 PCI_62 PCI_63 PCI_64 PCI_65 PCI_66 PCI_68 PCI_69 PCI_7 PCI_70 PCI_71 PCI_75 PCI_76 PCI_77 PCI_78 PCI_79 PCI_8 PCI_80 PCI_81 PCI_83 PCI_84 PCI_85 PCI_86 PCI_9 PCI_90 PCI_91 PCI_92 PCI_93 PCI_94 PCI_95 PCI_96 PCI_98 PCI_99    
   LocalDateTime lt1 = new LocalDateTime(ISOChronology.getInstanceUTC().getDateTimeMillis(2000, 10, 01, 01),BuddhistChronology.getInstanceUTC());    
   LocalDateTime lt2 = new LocalDateTime(lt1,ISOChronology.getInstanceUTC());
	return  lt1.equals(lt2); 
 } 
 public int test25(){   //PCI_11-14  PCI_100 PCI_101 PCI_105-111 PCI_113-116 PCI_133-144 PCI_17 PCI_18 PCI_19 PCI_20 PCI_21 PCI_22 PCI_23 PCI_25 PCI_26 PCI_27 PCI_28 PCI_3 PCI_4 PCI_45 PCI_46 PCI_47 PCI_48 PCI_49 PCI_5 PCI_50 PCI_51 PCI_53 PCI_54 PCI_55 PCI_56 PCI_6 PCI_60 PCI_61 PCI_62 PCI_63 PCI_64 PCI_65 PCI_66 PCI_68 PCI_69 PCI_7 PCI_70 PCI_71 PCI_75 PCI_76 PCI_77 PCI_78 PCI_79 PCI_8 PCI_80 PCI_81 PCI_83 PCI_84 PCI_85 PCI_86 PCI_9 PCI_90 PCI_91 PCI_92 PCI_93 PCI_94 PCI_95 PCI_96 PCI_98 PCI_99     
   LocalDateTime lt1 = new LocalDateTime(ISOChronology.getInstanceUTC().getDateTimeMillis(2000, 10, 01, 01),BuddhistChronology.getInstanceUTC());    
   LocalDateTime lt2 = new LocalDateTime(lt1,ISOChronology.getInstanceUTC());
	return  lt1.compareTo(lt2); 
 }*/
  /*@Test
  public static DateTime test26(){ //OMR_1 PCI_11 PCI_12 PCI_13 PCI_14 PCI_147 PCI_148 PCI_149 PCI_150 PCI_151 PCI_152 PCI_153 PCI_155 PCI_156 PCI_157 PCI_158 PCI_17 PCI_18 PCI_19 PCI_20 PCI_21 PCI_22 PCI_23 PCI_25 PCI_26 PCI_27 PCI_28 PCI_3 PCI_4 PCI_5 PCI_6 PCI_7 PCI_8 PCI_9 
    LocalDateTime lt1 = new LocalDateTime(ISOChronology.getInstanceUTC().getDateTimeMillis(2000, 10, 01, 8, 10, 10, 10),BuddhistChronology.getInstanceUTC());
    DateTimeZone zone = DateTimeZone.forID("+01:00"); 
	 DateTime actual = lt1.toDateTime(zone);
    DateTime expected = new DateTime(2543,10,1,8,10,10,.0102543-10-01T08:10:10.010+01:00
 }
 public LocalDateTime test27(){ // IOD_1 IOD_2 IOD_5 PCI_162 PCI_163 PCI_164 PCI_165 PCI_166 PCI_167 PCI_168 PCI_170 PCI_171 PCI_172 PCI_173 PCI_177 PCI_178 PCI_179 PCI_180 PCI_181 PCI_182 PCI_183 PCI_185 PCI_186 PCI_187 PCI_188 PCI_192 PCI_193 PCI_194 PCI_195 PCI_196 PCI_197 PCI_198 PCI_200 PCI_201 PCI_202 PCI_203      
   LocalDateTime lt1 = new LocalDateTime(ISOChronology.getInstanceUTC().getDateTimeMillis(2000, 10, 01, 01),BuddhistChronology.getInstanceUTC());    
	return  lt1.withDate(2010,12,30); 
 }
  public Chronology test28(){   //PCI_31-37 PCI_39-42 PCI_60-66 PCI_68-71 PCI_75-81 PCI_83-86 PCI_90-96 PCI_98-101 PCI_105-111 PCI_113-116 
   LocalDateTime lt1 = new LocalDateTime(BuddhistChronology.getInstanceUTC().getDateTimeMillis(2000, 10, 01, 01),BuddhistChronology.getInstanceUTC());    
   LocalDateTime lt2 = new LocalDateTime(lt1,DateTimeZone.getDefault());
	return  lt2.getChronology(); 
 }
  public Chronology test29(){   //PCI_31-37 PCI_39-42 PCI_60-66 PCI_68-71 PCI_75-81 PCI_83-86 PCI_90-96 PCI_98-101 PCI_105-111 PCI_113-116 
   LocalDateTime lt1 = new LocalDateTime(BuddhistChronology.getInstanceUTC().getDateTimeMillis(2000, 10, 01, 01),BuddhistChronology.getInstanceUTC());    
   LocalDateTime lt2 = new LocalDateTime(lt1,BuddhistChronology.getInstanceUTC());
	return  lt2.getChronology(); 
 }

// --------------- PCI----------------------------------------------------------------------------------------------------------
 
/*
//------------------------ TRY ----------------------------------------------------------------------------------
_public static void main(String[] args){
__// created for EAM 24
//__DurationFieldType range = DateTimeFieldType.millisOfDay().getDurationType();
__//DurationFieldType range1 = DateTimeFieldType.millisOfDay().getRangeDurationType();
__
__ _DateTime dt = new DateTime();
   LocalDateTime lt = new LocalDateTime(dt, BuddhistChronology.getInstanceUTC());
_System.out.println(lt.getLocalMillis());
//__System.out.println(range);
//__System.out.println(range1);
//__System.out.println(lt.isSupported(range));
//__System.out.println(range == DurationFieldType.days());
//__System.out.println(lt.isSupported(range1));
//__System.out.println(range1 == DurationFieldType.days());
_}
*/
/*public static void main(String[] args){
   //LocalDateTime lt1 = new LocalDateTime(ISOChronology.getInstanceUTC().getDateTimeMillis(0, 1, 1, 20, 11, 10, 19),ISOChronology.getInstanceUTC());
   // DateTimeZone zone = DateTimeZone.forID("+05:00");
	LocalDateTime lt1 = new LocalDateTime(ISOChronology.getInstanceUTC().getDateTimeMillis(0, 1, 1, 20, 11, 10, 19),ISOChronology.getInstanceUTC());    
	LocalDateTime.Property p = new LocalDateTime.Property(lt1, ISOChronology.getInstanceUTC().dayOfWeek());
	System.out.println(p.withMinimumValue()); 
	System.out.println(p.getMinimumValue()); 
	System.out.println(p.getMinimumValueOverall()); 
//	System.out.println(p.setCopy(p.getMinimumValueOverall()).getYearOfEra()); 
	//System.out.println(lt1.toDateTime(zone).toString());
//	System.out.println(lt1.getYearOfEra());
//	System.out.println(lt1.getYear());
//	System.out.println(lt1.getEra());
//	System.out.println(lt1.getWeekyear());

 }*/
}
